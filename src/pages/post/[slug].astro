---
//sanity cms
import { useSanityClient } from 'astro-sanity';
import PortableText from '../../components/PortableText.astro';
import { urlForImage } from '../../sanity/urlForImage.js';

export async function getStaticPaths() {
  const posts = await useSanityClient().fetch(`*[_type == "post"]`); 

  return posts.map((post) => {
    return {
      params: {
        slug: post.slug?.current || '',
      },
      props: { ...post },
    };
  });
}

const {title, description, information, headerImage, images} = Astro.props;

//component imports
import Layout from "../../layouts/Layout.astro";

//style imports
import '../../styles/typography.css'
---
<Layout 
  title ={"GRAAR | " + title}
  image={urlForImage(headerImage).format('webp').url()}>
  <main>
    <section>
      <img src={urlForImage(headerImage).format('webp').url()} alt={headerImage.alt}>
    </section>
    <section>
      <div>
        <h1>{title}</h1>
        <div>
          <div>
            <PortableText portableText={description}/>
          </div>
          <div>
            <div>
              <img src="/icons/grooves.svg" alt="" class="grooves">
            </div>
            <div class="description">
              <PortableText portableText={information}/>
            </div>
          </div>
        </div>
      </div>
    </section>
    {images && <section>
          {images.map((image) => (
            <div>
              <img src={urlForImage(image).format('webp').url()} alt={image.alt} class="openModal">
              <p class="small-body">{image.caption}</p>
            </div>
          ))}
    </section>}
    <dialog id="modal" class="modal">
      <div>
        <img src={urlForImage(headerImage).format('webp').url()} alt="" id="modalImage"> 
      </div>
    </dialog>
  </main>
</Layout>

<script>
  const modal = document.getElementById('modal');
  const images = document.querySelectorAll('.openModal');
  const modalImage = document.getElementById('modalImage');

  const handleClick = (event) => {

    if (window.innerWidth >= 431) {
      const clickedImageSrc = event.target.src;
      //@ts-ignore
      modalImage.src = clickedImageSrc;
  
      setTimeout(function() {
        //@ts-ignore
        modal.showModal();
        modal.style.opacity = '1';
      }, 50);
    }

    else {
      return;
    }
  }

  images.forEach((image) => {
    image.addEventListener('click', handleClick);
  });

  modal.addEventListener('close', () => {
    modal.style.opacity = '0';
  })

  modal.addEventListener('click', e => {
    const dialogDimensions = modal.getBoundingClientRect()
    if (
      e.clientX < dialogDimensions.left ||
      e.clientX > dialogDimensions.right ||
      e.clientY < dialogDimensions.top ||
      e.clientY > dialogDimensions.bottom
    ) {
      //@ts-ignore
      modal.close();
    }
  })
</script>

<style>
  main {
    padding: 0 24px;
    display: flex;
    flex-direction: column;
    gap: 80px;
    margin: 80px 0;

    > section:nth-child(2) {
      > div {
        display: flex;
        flex-direction: column;
        gap: 40px;
  
        > h1 {
          font-size: var(--h2);
        }
  
        > div:nth-child(2) {
          display: flex;
          flex-direction: column;
          gap: 40px;
        }
      }
    }

    > section:nth-child(3) {
        display: flex;
        flex-direction: column;
        gap: 80px;

        > div {
          width: 60%;

          > img {
            margin-bottom: 10px;
            cursor: pointer;  
          }
        }

        > div:nth-child(even) {
          align-self: center;
        }

        > div:nth-child(4n + 3) {
          align-self: end;
        }

        > div:nth-child(5 + 4n) {
          align-self: flex-end;
        }
    }
  }

  .grooves {
    margin-bottom: 40px;
  }

  .modal {
    border: none 0;
    outline: none;
    opacity: 0;
    transition: var(--transition);
    height: 70%;

    > div {
      height: 100%;
      > img {
        margin: auto;
        height: 100%;
        object-fit: cover;
      }
    }
  }

  @media (width >= 431px) {
    main {
      padding: 0 80px;

      > section:nth-child(2) {
        > div {
          > h1 {
            font-size: var(--h1) !important;
          }
  
          > div:nth-child(2) {
            flex-direction: row;
            gap: 160px;
  
            > div:nth-child(2) {
              > div:nth-child(2) {
                width: 400px;
              }
            }
          }
        }
      }

      > section:nth-child(3) {
				> div {
					width: 25%;
				}
      }
    }
}

@media (min-width: 432px) and (max-width: 905px) {
    .description {
      width: 250px!important;
    }

    main {
      > section:nth-child(2) {
        > div > div {
          gap: 80px !important;
        }
      }

      > section:nth-child(3) {
        gap: 160px;
        > div {
          width: 40%;
        }
      }
    }
}
</style>


