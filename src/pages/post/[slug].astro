---
//sanity cms
import { useSanityClient } from 'astro-sanity';
import PortableText from '../../components/PortableText.astro';
import { urlForImage } from '../../sanity/urlForImage.js';

export async function getStaticPaths() {
  const posts = await useSanityClient().fetch(`*[_type == "post"]`); 

  return posts.map((post) => {
    return {
      params: {
        slug: post.slug?.current || '',
      },
      props: { ...post },
    };
  });
}

const {title, description, information, headerImage, images} = Astro.props;

//component imports
import Layout from "../../layouts/Layout.astro";

//style imports
import '../../styles/typography.css'
---
<Layout title ={title}>
  <main>
    <section>
      <img src={urlForImage(headerImage).format('webp').url()} alt={headerImage.alt}>
    </section>
    <section>
      <div>
        <h1>{title}</h1>
        <div>
          <div>
            <PortableText portableText={description} type='description'/>
          </div>
          <div>
            <div>
              <img src="/icons/grooves.svg" alt="" class="grooves">
            </div>
            <div>
              <PortableText portableText={information} type='information'/>
            </div>
          </div>
        </div>
      </div>
    </section>
    {images && <section>
          {images.map((image) => (
            <div>
              <img src={urlForImage(image).format('webp').url()} alt={image.alt}>
              <p class="small-body">{image.caption}</p>
            </div>
          ))}
    </section>}
  </main>
</Layout>

<style>
  main {
    padding: 0 24px;
    display: flex;
    flex-direction: column;
    gap: 80px;
    margin: 80px 0;

    > section:nth-child(2) {
      > div {
        display: flex;
        flex-direction: column;
        gap: 40px;
  
        > h1 {
          font-size: var(--h2);
        }
  
        > div:nth-child(2) {
          display: flex;
          flex-direction: column;
          gap: 40px;
        }
  
        > div:nth-child(4) {
          > div {
            line-height: 500% !important;
          }
        }
      }
    }

    > section:nth-child(3) {
        display: flex;
        flex-direction: column;
        gap: 80px;

        > div {
          width: 60%;

          > img {
            margin-bottom: 10px;
          }
        }

        > div:nth-child(even) {
          align-self: center;
        }

        > div:nth-child(4n + 3) {
          align-self: end;
        }

        > div:nth-child(5 + 4n) {
          align-self: flex-end;
        }
    }

  }

  .grooves {
    margin-bottom: 40px;
  }

  @media (width >= 431px) {
    main {
      padding: 0 80px;

      > section:nth-child(2) {
        > div {
          > h1 {
            font-size: var(--h1) !important;
          }
  
          > div:nth-child(2) {
            flex-direction: row;
            gap: 160px;
  
            > div:nth-child(2) {
              > div:nth-child(2) {
                width: 400px;
              }
            }
          }
        }
      }

      > section:nth-child(3) {
				> div {
					width: 25%;
				}
      }
    }
  }
</style>


